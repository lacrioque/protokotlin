name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      checks: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: wrapper
        
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Run tests
      run: ./gradlew test
      
    - name: Generate test reports
      uses: dorny/test-reporter@v1
      if: success() || failure()
      continue-on-error: true
      with:
        name: Gradle Tests
        path: build/test-results/test/*.xml
        reporter: java-junit
        fail-on-error: false
        
    - name: Publish test results summary
      if: success() || failure()
      run: |
        echo "## 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
        if [ -f build/test-results/test/TEST-*.xml ]; then
          TOTAL_TESTS=$(grep -o 'tests="[^"]*"' build/test-results/test/TEST-*.xml | cut -d'"' -f2 | paste -sd+ | bc)
          FAILED_TESTS=$(grep -o 'failures="[^"]*"' build/test-results/test/TEST-*.xml | cut -d'"' -f2 | paste -sd+ | bc)
          PASSED_TESTS=$((TOTAL_TESTS - FAILED_TESTS))
          echo "- ✅ Passed: $PASSED_TESTS" >> $GITHUB_STEP_SUMMARY
          echo "- ❌ Failed: $FAILED_TESTS" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 Total: $TOTAL_TESTS" >> $GITHUB_STEP_SUMMARY
        else
          echo "- 📝 No test results found" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Build plugin
      run: ./gradlew build
      
    - name: Verify plugin functionality
      run: |
        ./gradlew publishToMavenLocal
        
        # Create test project
        mkdir -p test-project/src/main/proto
        
        # Create test proto file
        cat > test-project/src/main/proto/test.proto << 'EOF'
        syntax = "proto3";
        
        message TestMessage {
            string name = 1;
            int32 value = 2;
            repeated string items = 3;
        }
        EOF
        
        # Create test build.gradle.kts
        cat > test-project/build.gradle.kts << 'EOF'
        plugins {
            kotlin("jvm") version "2.2.0"
            id("de.markusfluer.protokotlin.plugin") version "1.0.0"
        }
        
        repositories {
            mavenLocal()
            mavenCentral()
        }
        
        dependencies {
            implementation("org.jetbrains.kotlinx:kotlinx-serialization-protobuf:1.6.2")
        }
        
        protokotlin {
            protoDir.set(file("src/main/proto"))
            packageName.set("com.test.generated")
        }
        
        java {
            toolchain {
                languageVersion.set(JavaLanguageVersion.of(21))
            }
        }
        EOF
        
        # Create settings.gradle.kts
        cat > test-project/settings.gradle.kts << 'EOF'
        rootProject.name = "test-project"
        
        pluginManagement {
            repositories {
                mavenLocal()
                gradlePluginPortal()
                mavenCentral()
            }
        }
        EOF
        
        # Test plugin
        cd test-project
        ../gradlew generateProtoKotlin --stacktrace
        
        # Verify generated files
        echo "Generated files:"
        find build/generated -name "*.kt" -type f
        
        # Verify content
        if [ -f "build/generated/protokotlin/TestMessage.kt" ]; then
          echo "✅ Plugin test passed - TestMessage.kt generated"
          head -20 build/generated/protokotlin/TestMessage.kt
        else
          echo "❌ Plugin test failed - TestMessage.kt not found"
          exit 1
        fi
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-artifacts
        path: |
          build/libs/
          build/reports/
        retention-days: 7